<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="DevExpress.Data.v22.1" name="DevExpress.Data.v22.1, Version=22.1.13.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="btnCrab.ImageOptions.SvgImage" type="DevExpress.Utils.Svg.SvgImage, DevExpress.Data.v22.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFlEZXZFeHByZXNzLkRhdGEudjIyLjEsIFZlcnNpb249MjIuMS42
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjg4ZDE3NTRkNzAwZTQ5YQUBAAAAHURl
        dkV4cHJlc3MuVXRpbHMuU3ZnLlN2Z0ltYWdlAQAAAAREYXRhBwICAAAACQMAAAAPAwAAAEsIAAAC77u/
        PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4NCjxzdmcgeD0iMHB4IiB5PSIwcHgi
        IHZpZXdCb3g9IjAgMCAzNjAgMzYwIiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9y
        Zy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHhtbDpz
        cGFjZT0icHJlc2VydmUiIGlkPSJMYXllcl8xIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAg
        MCAzNjAgMzYwIj4NCiAgPGcgaWQ9IlhNTElEXzIyOV8iPg0KICAgIDxnPg0KICAgICAgPHBhdGggZD0i
        TTM0MCwxODIuNWMwLDEzLjc4NS0xMS4yMTUsMjUtMjUsMjVoLTE3Ljk3OGMtMy40NjctMTEuNDU3LTku
        ODUtMjIuMDgxLTE4LjUyOS0zMS40MTcgICAgYzguMzE0LTYuNDA0LDE0Ljc1MS0xNS4xMjMsMTguMzM0
        LTI1LjE5MUMzMzYuNjUxLDE0My4wNjQsMzYwLDEwNy43ODUsMzYwLDcyLjQ5OUMzNjAsMzIuNSwzMzAs
        MjIuNSwzMzAsMjIuNWMwLDMwLTIwLDUwLTIwLDUwICAgIHYtNDBjLTUwLDEwLTUwLDgwLTUwLDEwMGMw
        LDguMjcxLTYuNzI5LDE1LTE1LDE1aC05Ljk4Yy02LjUzOS0yLjUzNS0xMy40My00LjYyOC0yMC42MDEt
        Ni4yMzYgICAgYzIuNjYzLTYuOTE1LDQuNy0xNS41NjcsNS4zNTMtMjYuMzIyYzYuMS0zLjQyNiwxMC4y
        MjktOS45NDcsMTAuMjI5LTE3LjQ0MWMwLTExLjA0NS04Ljk1NS0yMC0yMC0yMGMtMTEuMDQ2LDAtMjAs
        OC45NTUtMjAsMjAgICAgYzAsNy4yOTIsMy45MTUsMTMuNjU0LDkuNzQ2LDE3LjE0OGMtMC43NTgsMTAu
        Njg2LTMuMTU3LDE4LjIzNy01Ljc5OCwyMy40NmMtNC41NzctMC4zOTctOS4yMjktMC42MDgtMTMuOTQ4
        LTAuNjA4ICAgIHMtOS4zNzEsMC4yMTEtMTMuOTQ4LDAuNjA4Yy0yLjY0MS01LjIyMy01LjA0LTEyLjc3
        NC01Ljc5OC0yMy40NmM1LjgzMS0zLjQ5NSw5Ljc0Ni05Ljg1Niw5Ljc0Ni0xNy4xNDhjMC0xMS4wNDUt
        OC45NTQtMjAtMjAtMjAgICAgYy0xMS4wNDUsMC0yMCw4Ljk1NS0yMCwyMGMwLDcuNDk0LDQuMTI5LDE0
        LjAxNiwxMC4yMjksMTcuNDQxYzAuNjUyLDEwLjc1NSwyLjY4OSwxOS40MDgsNS4zNTMsMjYuMzIyICAg
        IGMtNy4xNzEsMS42MDgtMTQuMDYyLDMuNzAyLTIwLjYwMSw2LjIzNkgxMTVjLTguMjcxLDAtMTUtNi43
        MjktMTUtMTVjMC0yMCwwLTkwLTUwLTEwMHY0MGMwLDAtMjAtMjAtMjAtNTBjMCwwLTMwLDEwLTMwLDQ5
        Ljk5OSAgICBjMCwzNS4yODYsMjMuMzQ5LDcwLjU2NCw2My4xNzQsNzguMzkyYzMuNTgzLDEwLjA2OCwx
        MC4wMiwxOC43ODgsMTguMzM0LDI1LjE5MWMtOC42OCw5LjMzNS0xNS4wNjMsMTkuOTYtMTguNTI5LDMx
        LjQxN0g0NSAgICBjLTEzLjc4NSwwLTI1LTExLjIxNS0yNS0yNXYtMjVIMHYyNWMwLDI0LjgxMywyMC4x
        ODcsNDUsNDUsNDVoMTVjMCw2Ljg3NCwxLjAzMiwxMy41NjcsMi45NzksMjBINDVjLTI0LjgxMywwLTQ1
        LDIwLjE4Ny00NSw0NXYyNSAgICBoMjB2LTI1YzAtMTMuNzg1LDExLjIxNS0yNSwyNS0yNWgyNy40ODNj
        Mi43NjMsNC4xNjksNS45MzgsOC4xNTYsOS40OTcsMTEuOTI4QzYzLjQ5NiwyODUuMDI2LDUwLDMwMi4y
        MTMsNTAsMzIyLjV2MTVoMjB2LTE1ICAgIGMwLTEzLjc4NSwxMS4yMTUtMjUsMjUtMjVoOS41ODJjMjAu
        NjA4LDEyLjUwNSw0Ni44NDQsMjAsNzUuNDE4LDIwYzI4LjU3MywwLDU0LjgwOS03LjQ5NSw3NS40MTgt
        MjBIMjY1ICAgIGMxMy43ODUsMCwyNSwxMS4yMTUsMjUsMjV2MTVoMjB2LTE1YzAtMjAuMjg3LTEzLjQ5
        Ni0zNy40NzUtMzEuOTgtNDMuMDcyYzMuNTU5LTMuNzcxLDYuNzM0LTcuNzU5LDkuNDk3LTExLjkyOEgz
        MTUgICAgYzEzLjc4NSwwLDI1LDExLjIxNSwyNSwyNXYyNWgyMHYtMjVjMC0yNC44MTMtMjAuMTg2LTQ1
        LTQ1LTQ1aC0xNy45NzhjMS45NDYtNi40MzMsMi45NzgtMTMuMTI2LDIuOTc4LTIwaDE1ICAgIGMyNC44
        MTQsMCw0NS0yMC4xODcsNDUtNDV2LTI1aC0yMFYxODIuNXoiIC8+DQogICAgPC9nPg0KICA8L2c+DQog
        IDxnIC8+DQogIDxnIC8+DQogIDxnIC8+DQogIDxnIC8+DQogIDxnIC8+DQogIDxnIC8+DQogIDxnIC8+
        DQogIDxnIC8+DQogIDxnIC8+DQogIDxnIC8+DQogIDxnIC8+DQogIDxnIC8+DQogIDxnIC8+DQogIDxn
        IC8+DQogIDxnIC8+DQo8L3N2Zz4L
</value>
  </data>
  <data name="btnListReset.ImageOptions.SvgImage" type="DevExpress.Utils.Svg.SvgImage, DevExpress.Data.v22.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFlEZXZFeHByZXNzLkRhdGEudjIyLjEsIFZlcnNpb249MjIuMS42
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjg4ZDE3NTRkNzAwZTQ5YQUBAAAAHURl
        dkV4cHJlc3MuVXRpbHMuU3ZnLlN2Z0ltYWdlAQAAAAREYXRhBwICAAAACQMAAAAPAwAAAL0CAAAC77u/
        PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4NCjxzdmcgeD0iMHB4IiB5PSIwcHgi
        IHZpZXdCb3g9IjAgMCAzMiAzMiIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcv
        MjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWw6c3Bh
        Y2U9InByZXNlcnZlIiBpZD0iTGF5ZXJfMSIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAg
        MzIgMzIiPg0KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLlJlZHtmaWxsOiNEMTFDMUM7fQoJLkJs
        YWNre2ZpbGw6IzcyNzI3Mjt9CgkuQmx1ZXtmaWxsOiMxMTc3RDc7fQoJLkdyZWVue2ZpbGw6IzAzOUMy
        Mzt9CgkuWWVsbG93e2ZpbGw6I0ZGQjExNTt9CgkuV2hpdGV7ZmlsbDojRkZGRkZGO30KCS5zdDB7b3Bh
        Y2l0eTowLjU7fQoJLnN0MXtvcGFjaXR5OjAuNzU7fQoJLnN0MntvcGFjaXR5OjAuMjU7fQo8L3N0eWxl
        Pg0KICA8ZyBpZD0iUmVzZXRWaWV3Ij4NCiAgICA8cGF0aCBkPSJNMjAsMTBoLTAuN2MtMi42LDAtNS4x
        LDEtNy4xLDIuOUw2LDE5LjJWMTBsLTQsNHYxMmgxMmw0LTRIOC44bDYuMi02LjJjMS4yLTEuMiwyLjct
        MS44LDQuMi0xLjh2MEgyMCAgIGMzLjMsMCw2LDIuNyw2LDZ2Mmg0di0yQzMwLDE0LjUsMjUuNSwxMCwy
        MCwxMHoiIGNsYXNzPSJCbHVlIiAvPg0KICA8L2c+DQo8L3N2Zz4L
</value>
  </data>
</root>